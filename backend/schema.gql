# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AgencyEntity {
  createDate: DateTime!
  description: String!
  editDate: DateTime!
  id: ID!
  parentId: AgencyEntity
  title: String!
  type: String
}

input CreateAgencyInput {
  description: String
  title: String!
  type: String
}

input CreateUserInput {
  age: Float
  city: String
  email: String!
  firstName: String
  lastName: String
  role: String
  userName: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetAgenciesInput {
  types: [String!]
}

input GetUsersInput {
  roles: [String!]
}

type Mutation {
  createAgency(createAgency: CreateAgencyInput!): AgencyEntity!
  createUser(createUser: CreateUserInput!): UserEntity!
  removeAgency(id: ID!): ID!
  removeUser(id: Float!): Float!
  updateAgency(updateAgency: UpdateAgencyInput!): AgencyEntity!
  updateUser(updateUser: UpdateUserInput!): UserEntity!
}

type ProfileEntity {
  age: Float
  city: String!
  firstName: String!
  id: ID!
  lastName: String!
  role: String
}

type Query {
  getAgencies(agenciesInput: GetAgenciesInput!): [AgencyEntity!]!
  getAgency(id: ID!): AgencyEntity!

  """This graphql method for getting a user by id"""
  getUser(id: Float!): UserEntity!

  """This graphql method for getting all users"""
  getUsers(usersInput: GetUsersInput!): [UserEntity!]!
}

input UpdateAgencyInput {
  description: String
  id: ID!
  title: String!
  type: String
}

input UpdateUserInput {
  age: Float
  city: String
  email: String!
  firstName: String
  id: ID!
  lastName: String
  role: String
  userName: String
}

type UserEntity {
  createdAt: DateTime!
  email: String!
  id: ID!
  profile: ProfileEntity
  updatedAt: DateTime!
  userName: String
}